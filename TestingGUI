local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")

-- GLOBAL SETTINGS
local savedSettings = getgenv().GUI_Settings or {}

-- Blur effect for background
local blur = Instance.new("BlurEffect", Lighting)
blur.Size = 12

-- GUI ROOT
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "NativeFishingGUI"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- MAIN FRAME
local main = Instance.new("Frame", gui)
main.Size = UDim2.new(0, 620, 0, 360)
main.Position = UDim2.new(0.3, 0, 0.2, 0)
main.BackgroundColor3 = Color3.fromRGB(70, 0, 0)
main.BackgroundTransparency = 0.3
main.BorderSizePixel = 0
main.Active = true
main.Draggable = true
Instance.new("UICorner", main).CornerRadius = UDim.new(0, 10)

-- SIDEBAR
local sidebar = Instance.new("Frame", main)
sidebar.Size = UDim2.new(0, 150, 1, 0)
sidebar.BackgroundColor3 = Color3.fromRGB(50, 0, 0)
sidebar.BackgroundTransparency = 0.4
sidebar.BorderSizePixel = 0
Instance.new("UICorner", sidebar).CornerRadius = UDim.new(0, 10)

local sideLayout = Instance.new("UIListLayout", sidebar)
sideLayout.Padding = UDim.new(0, 8)
sideLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
sideLayout.VerticalAlignment = Enum.VerticalAlignment.Top

-- TABS
local function createTabBtn(name, icon)
	local btn = Instance.new("TextButton", sidebar)
	btn.Size = UDim2.new(1, -20, 0, 32)
	btn.BackgroundColor3 = Color3.fromRGB(100, 20, 20)
	btn.BackgroundTransparency = 0.3
	btn.Text = icon .. "  " .. name
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 14
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.AutoButtonColor = false
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)
	return btn
end

-- CONTENT FRAME
local contentFrame = Instance.new("Frame", main)
contentFrame.Position = UDim2.new(0, 155, 0, 0)
contentFrame.Size = UDim2.new(1, -155, 1, 0)
contentFrame.BackgroundTransparency = 1

local pages = {}

local function createPage(name)
	local page = Instance.new("Frame", contentFrame)
	page.Size = UDim2.new(1, 0, 1, 0)
	page.BackgroundTransparency = 1
	page.Visible = false

	local layout = Instance.new("UIListLayout", page)
	layout.Padding = UDim.new(0, 10)
	layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	layout.VerticalAlignment = Enum.VerticalAlignment.Top

	pages[name] = page
	return page
end

-- HEADER TITLE
local function createTitle(parent, text)
	local title = Instance.new("TextLabel", parent)
	title.Size = UDim2.new(1, -20, 0, 30)
	title.Text = text
	title.Font = Enum.Font.GothamBold
	title.TextSize = 20
	title.TextColor3 = Color3.fromRGB(255, 255, 255)
	title.BackgroundTransparency = 1
	title.TextXAlignment = Enum.TextXAlignment.Left
end

-- TOGGLE
local function createToggle(parent, label, key)
	local frame = Instance.new("Frame", parent)
	frame.Size = UDim2.new(0.9, 0, 0, 30)
	frame.BackgroundColor3 = Color3.fromRGB(50, 0, 0)
	frame.BackgroundTransparency = 0.3
	Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 6)

	local text = Instance.new("TextLabel", frame)
	text.Size = UDim2.new(0.8, 0, 1, 0)
	text.BackgroundTransparency = 1
	text.Font = Enum.Font.Gotham
	text.TextSize = 14
	text.TextColor3 = Color3.fromRGB(255, 255, 255)
	text.TextXAlignment = Enum.TextXAlignment.Left
	text.Text = "   " .. label

	local toggle = Instance.new("TextButton", frame)
	toggle.Size = UDim2.new(0.2, -4, 0.8, 0)
	toggle.Position = UDim2.new(0.8, 2, 0.1, 0)
	toggle.BackgroundColor3 = savedSettings[key] and Color3.fromRGB(200, 20, 20) or Color3.fromRGB(80, 0, 0)
	toggle.BackgroundTransparency = 0.2
	toggle.Text = ""
	Instance.new("UICorner", toggle).CornerRadius = UDim.new(1, 0)

	toggle.MouseButton1Click:Connect(function()
		savedSettings[key] = not savedSettings[key]
		toggle.BackgroundColor3 = savedSettings[key] and Color3.fromRGB(200, 20, 20) or Color3.fromRGB(80, 0, 0)
	end)
end

-- DROPDOWN
local function createDropdown(parent, label, options, key)
	local wrapper = Instance.new("Frame", parent)
	wrapper.Size = UDim2.new(0.9, 0, 0, 55)
	wrapper.BackgroundTransparency = 1

	local labelText = Instance.new("TextLabel", wrapper)
	labelText.Size = UDim2.new(1, 0, 0, 20)
	labelText.Position = UDim2.new(0, 0, 0, 0)
	labelText.Text = label
	labelText.Font = Enum.Font.Gotham
	labelText.TextSize = 13
	labelText.BackgroundTransparency = 1
	labelText.TextColor3 = Color3.fromRGB(255, 255, 255)
	labelText.TextXAlignment = Enum.TextXAlignment.Left

	local dropdown = Instance.new("TextButton", wrapper)
	dropdown.Size = UDim2.new(1, 0, 0, 30)
	dropdown.Position = UDim2.new(0, 0, 0, 22)
	dropdown.BackgroundColor3 = Color3.fromRGB(50, 0, 0)
	dropdown.BackgroundTransparency = 0.3
	dropdown.Font = Enum.Font.Gotham
	dropdown.TextSize = 14
	dropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
	Instance.new("UICorner", dropdown).CornerRadius = UDim.new(0, 6)

	local selected = savedSettings[key] or options[1]
	dropdown.Text = selected

	dropdown.MouseButton1Click:Connect(function()
		local next = table.find(options, selected) % #options + 1
		selected = options[next]
		dropdown.Text = selected
		savedSettings[key] = selected
	end)
end

-- TABS & PAGES
local tabFishing = createTabBtn("Fishing", "ðŸŽ£")
local fishingPage = createPage("Fishing")
tabFishing.MouseButton1Click:Connect(function()
	for _, page in pairs(pages) do page.Visible = false end
	fishingPage.Visible = true
end)

-- Add sidebar only (like in image)
local tabNames = {
	"Configuration", "Fishing", "Autos", "Areas", "Market", "Miscellaneous", "Settings", "Debug"
}
for _, name in ipairs(tabNames) do
	if name ~= "Fishing" then createTabBtn(name, " ") end
end

-- Populate Fishing page
createTitle(fishingPage, "Main")
createToggle(fishingPage, "Freeze Character", "freezeChar")
createToggle(fishingPage, "Auto Equip Rod", "autoEquipRod")
createDropdown(fishingPage, "Equip Rod Event Zone", {"Placeholder"}, "eventRod")
createDropdown(fishingPage, "Equip Red if Event Zone", {"None"}, "redZoneRod")
createDropdown(fishingPage, "Equip Rod", {"Aurora Rod"}, "equipRod")
createToggle(fishingPage, "Non-Blatant Fishing", "nonBlatant")
createToggle(fishingPage, "Legit Fishing", "legitFishing")

-- Show default tab
fishingPage.Visible = true

