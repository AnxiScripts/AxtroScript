-- Native-style GUI for Roblox
-- Fully custom, sleek, dark, transparent, rounded, smooth

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Clear old GUI if exists
local oldGui = playerGui:FindFirstChild("NativeGUI")
if oldGui then oldGui:Destroy() end

local gui = Instance.new("ScreenGui")
gui.Name = "NativeGUI"
gui.ResetOnSpawn = false
gui.Parent = playerGui

-- Main frame
local main = Instance.new("Frame")
main.Name = "Main"
main.Size = UDim2.new(0, 520, 0, 350)
main.Position = UDim2.new(0.5, -260, 0.5, -175)
main.AnchorPoint = Vector2.new(0.5, 0.5)
main.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
main.BackgroundTransparency = 0.1
main.BorderSizePixel = 0
main.ClipsDescendants = true
main.Parent = gui

-- Rounded corners for main
local roundMain = Instance.new("UICorner")
roundMain.CornerRadius = UDim.new(0, 14)
roundMain.Parent = main

-- Background Blur (optional, depends on Roblox version)
-- if you want a blur behind the GUI, you can try this:
local blurEffect = Instance.new("BlurEffect")
blurEffect.Size = 15
blurEffect.Enabled = true
blurEffect.Parent = game:GetService("Lighting")

-- Top bar
local topBar = Instance.new("Frame")
topBar.Name = "TopBar"
topBar.Size = UDim2.new(1, 0, 0, 38)
topBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
topBar.BackgroundTransparency = 0.05
topBar.BorderSizePixel = 0
topBar.Parent = main

local roundTop = Instance.new("UICorner")
roundTop.CornerRadius = UDim.new(0, 14)
roundTop.Parent = topBar

-- Title Label
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(0, 200, 1, 0)
titleLabel.Position = UDim2.new(0, 20, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Native"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 20
titleLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = topBar

-- Minimize Button
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Name = "MinimizeBtn"
minimizeBtn.Size = UDim2.new(0, 32, 0, 32)
minimizeBtn.Position = UDim2.new(1, -72, 0, 3)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
minimizeBtn.BackgroundTransparency = 0
minimizeBtn.BorderSizePixel = 0
minimizeBtn.AutoButtonColor = false
minimizeBtn.Text = "–"
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.TextSize = 25
minimizeBtn.TextColor3 = Color3.fromRGB(180, 180, 180)
minimizeBtn.Parent = topBar

local roundMin = Instance.new("UICorner")
roundMin.CornerRadius = UDim.new(0, 8)
roundMin.Parent = minimizeBtn

minimizeBtn.MouseEnter:Connect(function()
    TweenService:Create(minimizeBtn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(65,65,65), TextColor3 = Color3.fromRGB(220,220,220)}):Play()
end)
minimizeBtn.MouseLeave:Connect(function()
    TweenService:Create(minimizeBtn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(38,38,38), TextColor3 = Color3.fromRGB(180,180,180)}):Play()
end)

-- Close Button
local closeBtn = Instance.new("TextButton")
closeBtn.Name = "CloseBtn"
closeBtn.Size = UDim2.new(0, 32, 0, 32)
closeBtn.Position = UDim2.new(1, -36, 0, 3)
closeBtn.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
closeBtn.BackgroundTransparency = 0
closeBtn.BorderSizePixel = 0
closeBtn.AutoButtonColor = false
closeBtn.Text = "×"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 25
closeBtn.TextColor3 = Color3.fromRGB(180, 180, 180)
closeBtn.Parent = topBar

local roundClose = Instance.new("UICorner")
roundClose.CornerRadius = UDim.new(0, 8)
roundClose.Parent = closeBtn

closeBtn.MouseEnter:Connect(function()
    TweenService:Create(closeBtn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(230, 70, 70), TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
end)
closeBtn.MouseLeave:Connect(function()
    TweenService:Create(closeBtn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(38, 38, 38), TextColor3 = Color3.fromRGB(180, 180, 180)}):Play()
end)

-- Content Frame below top bar
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1, -40, 1, -48)
contentFrame.Position = UDim2.new(0, 20, 0, 48)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = main

-- Tabs Container
local tabsFrame = Instance.new("Frame")
tabsFrame.Name = "Tabs"
tabsFrame.Size = UDim2.new(0, 100, 1, 0)
tabsFrame.BackgroundTransparency = 1
tabsFrame.Parent = contentFrame

-- Tab Buttons UI List
local tabList = Instance.new("UIListLayout")
tabList.FillDirection = Enum.FillDirection.Vertical
tabList.SortOrder = Enum.SortOrder.LayoutOrder
tabList.Padding = UDim.new(0, 12)
tabList.Parent = tabsFrame

-- Tab Buttons
local tabs = {"Home", "Scripts", "Settings"}
local tabButtons = {}
for i, tabName in ipairs(tabs) do
    local btn = Instance.new("TextButton")
    btn.Name = tabName .. "Tab"
    btn.Size = UDim2.new(1, 0, 0, 30)
    btn.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
    btn.BorderSizePixel = 0
    btn.AutoButtonColor = false
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 16
    btn.TextColor3 = Color3.fromRGB(180, 180, 180)
    btn.Text = tabName
    btn.Parent = tabsFrame

    local roundBtn = Instance.new("UICorner")
    roundBtn.CornerRadius = UDim.new(0, 8)
    roundBtn.Parent = btn

    btn.MouseEnter:Connect(function()
        if btn.BackgroundColor3 ~= Color3.fromRGB(75, 75, 75) then
            TweenService:Create(btn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(55, 55, 55), TextColor3 = Color3.fromRGB(210, 210, 210)}):Play()
        end
    end)
    btn.MouseLeave:Connect(function()
        if btn.BackgroundColor3 ~= Color3.fromRGB(75, 75, 75) then
            TweenService:Create(btn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(38, 38, 38), TextColor3 = Color3.fromRGB(180, 180, 180)}):Play()
        end
    end)

    tabButtons[tabName] = btn
end

-- Pages container
local pages = Instance.new("Frame")
pages.Name = "Pages"
pages.Size = UDim2.new(1, -120, 1, 0)
pages.Position = UDim2.new(0, 120, 0, 0)
pages.BackgroundTransparency = 1
pages.Parent = contentFrame

-- UIListLayout for pages
local pageList = Instance.new("UIListLayout")
pageList.FillDirection = Enum.FillDirection.Horizontal
pageList.SortOrder = Enum.SortOrder.LayoutOrder
pageList.Parent = pages
pageList.HorizontalAlignment = Enum.HorizontalAlignment.Left

-- Create pages
local function createPage(name)
    local frame = Instance.new("Frame")
    frame.Name = name .. "Page"
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundTransparency = 1
    frame.Parent = pages
    return frame
end

local homePage = createPage("Home")
local scriptsPage = createPage("Scripts")
local settingsPage = createPage("Settings")

-- Home Page content example
local homeLabel = Instance.new("TextLabel")
homeLabel.Size = UDim2.new(1, 0, 0, 50)
homeLabel.Position = UDim2.new(0, 0, 0, 0)
homeLabel.BackgroundTransparency = 1
homeLabel.Font = Enum.Font.GothamBold
homeLabel.TextSize = 24
homeLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
homeLabel.Text = "Welcome to Native GUI"
homeLabel.TextXAlignment = Enum.TextXAlignment.Left
homeLabel.Parent = homePage

-- Example toggle in Home page
local function createToggle(parent, posY, labelText, default)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(1, -40, 0, 36)
    toggleFrame.Position = UDim2.new(0, 20, 0, posY)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
    toggleFrame.BorderSizePixel = 0
    toggleFrame.Parent = parent
    local round = Instance.new("UICorner")
    round.CornerRadius = UDim.new(0, 8)
    round.Parent = toggleFrame

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -60, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.TextSize = 18
    label.TextColor3 = Color3.fromRGB(220, 220, 220)
    label.Text = labelText
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = toggleFrame

    local toggleButton = Instance.new("Frame")
    toggleButton.Size = UDim2.new(0, 44, 0, 24)
    toggleButton.Position = UDim2.new(1, -54, 0, 6)
    toggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    toggleButton.BorderSizePixel = 0
    toggleButton.Parent = toggleFrame
    local toggleRound = Instance.new("UICorner")
    toggleRound.CornerRadius = UDim.new(0, 12)
    toggleRound.Parent = toggleButton

    local knob = Instance.new("Frame")
    knob.Name = "Knob"
    knob.Size = UDim2.new(0, 20, 0, 20)
    knob.Position = default and UDim2.new(1, -24, 0, 2) or UDim2.new(0, 2, 0, 2)
    knob.BackgroundColor3 = default and Color3.fromRGB(75, 210, 75) or Color3.fromRGB(120, 120, 120)
    knob.BorderSizePixel = 0
    knob.Parent = toggleButton
    local knobRound = Instance.new("UICorner")
    knobRound.CornerRadius = UDim.new(0, 10)
    knobRound.Parent = knob

    local toggled = default

    local function setToggle(state)
        toggled = state
        if toggled then
            TweenService:Create(knob, TweenInfo.new(0.2), {Position = UDim2.new(1, -24, 0, 2), BackgroundColor3 = Color3.fromRGB(75, 210, 75)}):Play()
            TweenService:Create(toggleButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}):Play()
        else
            TweenService:Create(knob, TweenInfo.new(0.2), {Position = UDim2.new(0, 2, 0, 2), BackgroundColor3 = Color3.fromRGB(120, 120, 120)}):Play()
            TweenService:Create(toggleButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(70, 70, 70)}):Play()
        end
    end

    toggleButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            setToggle(not toggled)
        end
    end)

    return {
        Frame = toggleFrame,
        Get = function() return toggled end,
        Set = setToggle,
    }
end

-- Add example toggles
local espToggle = createToggle(homePage, 80, "ESP", false)
local flyToggle = createToggle(homePage, 130, "Fly", false)

-- Sliders function
local function createSlider(parent, posY, labelText, min, max, default)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(1, -40, 0, 36)
    sliderFrame.Position = UDim2.new(0, 20, 0, posY)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
    sliderFrame.BorderSizePixel = 0
    sliderFrame.Parent = parent
    local round = Instance.new("UICorner")
    round.CornerRadius = UDim.new(0, 8)
    round.Parent = sliderFrame

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 160, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.TextSize = 18
    label.TextColor3 = Color3.fromRGB(220, 220, 220)
    label.Text = labelText
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = sliderFrame

    local sliderBar = Instance.new("Frame")
    sliderBar.Name = "SliderBar"
    sliderBar.Size = UDim2.new(1, -180, 0, 12)
    sliderBar.Position = UDim2.new(0, 170, 0, 12)
    sliderBar.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    sliderBar.BorderSizePixel = 0
    sliderBar.Parent = sliderFrame
    local roundBar = Instance.new("UICorner")
    roundBar.CornerRadius = UDim.new(0, 6)
    roundBar.Parent = sliderBar

    local fill = Instance.new("Frame")
    fill.Name = "Fill"
    fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    fill.BackgroundColor3 = Color3.fromRGB(75, 210, 75)
    fill.BorderSizePixel = 0
    fill.Parent = sliderBar
    local roundFill = Instance.new("UICorner")
    roundFill.CornerRadius = UDim.new(0, 6)
    roundFill.Parent = fill

    local knob = Instance.new("Frame")
    knob.Name = "Knob"
    knob.Size = UDim2.new(0, 20, 0, 20)
    knob.Position = UDim2.new((default - min) / (max - min), -10, 0, -4)
    knob.BackgroundColor3 = Color3.fromRGB(75, 210, 75)
    knob.BorderSizePixel = 0
    knob.Parent = sliderBar
    local roundKnob = Instance.new("UICorner")
    roundKnob.CornerRadius = UDim.new(0, 10)
    roundKnob.Parent = knob

    local dragging = false

    knob.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    sliderBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            local mousePos = UserInputService:GetMouseLocation()
            local relativePos = math.clamp(mousePos.X - sliderBar.AbsolutePosition.X, 0, sliderBar.AbsoluteSize.X)
            local newValue = math.floor(min + (relativePos / sliderBar.AbsoluteSize.X) * (max - min))
            fill.Size = UDim2.new(relativePos / sliderBar.AbsoluteSize.X, 0, 1, 0)
            knob.Position = UDim2.new(relativePos / sliderBar.AbsoluteSize.X, -10, 0, -4)
            dragging = false
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mousePos = UserInputService:GetMouseLocation()
            local relativePos = math.clamp(mousePos.X - sliderBar.AbsolutePosition.X, 0, sliderBar.AbsoluteSize.X)
            fill.Size = UDim2.new(relativePos / sliderBar.AbsoluteSize.X, 0, 1, 0)
            knob.Position = UDim2.new(relativePos / sliderBar.AbsoluteSize.X, -10, 0, -4)
        end
    end)

    return {
        Frame = sliderFrame,
        GetValue = function()
            local fraction = fill.Size.X.Scale
            return math.floor(min + fraction * (max - min))
        end,
    }
end

local speedSlider = createSlider(homePage, 180, "Speed", 10, 200, 50)

-- Dropdown example (simple)
local function createDropdown(parent, posY, labelText, options)
    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Size = UDim2.new(1, -40, 0, 36)
    dropdownFrame.Position = UDim2.new(0, 20, 0, posY)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
    dropdownFrame.BorderSizePixel = 0
    dropdownFrame.Parent = parent
    local round = Instance.new("UICorner")
    round.CornerRadius = UDim.new(0, 8)
    round.Parent = dropdownFrame

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -40, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.TextSize = 18
    label.TextColor3 = Color3.fromRGB(220, 220, 220)
    label.Text = labelText
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = dropdownFrame

    local dropdownBtn = Instance.new("TextButton")
    dropdownBtn.Size = UDim2.new(0, 32, 0, 32)
    dropdownBtn.Position = UDim2.new(1, -38, 0, 2)
    dropdownBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    dropdownBtn.BorderSizePixel = 0
    dropdownBtn.Text = "▼"
    dropdownBtn.Font = Enum.Font.GothamBold
    dropdownBtn.TextSize = 20
    dropdownBtn.TextColor3 = Color3.fromRGB(180, 180, 180)
    dropdownBtn.Parent = dropdownFrame

    local roundBtn = Instance.new("UICorner")
    roundBtn.CornerRadius = UDim.new(0, 8)
    roundBtn.Parent = dropdownBtn

    local listFrame = Instance.new("Frame")
    listFrame.Size = UDim2.new(1, 0, 0, #options * 30)
    listFrame.Position = UDim2.new(0, 0, 1, 6)
    listFrame.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
    listFrame.BorderSizePixel = 0
    listFrame.ClipsDescendants = true
    listFrame.Visible = false
    listFrame.Parent = dropdownFrame

    local roundList = Instance.new("UICorner")
    roundList.CornerRadius = UDim.new(0, 8)
    roundList.Parent = listFrame

    local listLayout = Instance.new("UIListLayout")
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Padding = UDim.new(0, 4)
    listLayout.Parent = listFrame

    local selected = nil

    for i, option in ipairs(options) do
        local optionBtn = Instance.new("TextButton")
        optionBtn.Size = UDim2.new(1, -20, 0, 26)
        optionBtn.BackgroundTransparency = 1
        optionBtn.Text = option
        optionBtn.Font = Enum.Font.Gotham
        optionBtn.TextSize = 18
        optionBtn.TextColor3 = Color3.fromRGB(220, 220, 220)
        optionBtn.TextXAlignment = Enum.TextXAlignment.Left
        optionBtn.Parent = listFrame

        optionBtn.MouseEnter:Connect(function()
            optionBtn.TextColor3 = Color3.fromRGB(75, 210, 75)
        end)
        optionBtn.MouseLeave:Connect(function()
            if optionBtn.Text ~= selected then
                optionBtn.TextColor3 = Color3.fromRGB(220, 220, 220)
            end
        end)

        optionBtn.MouseButton1Click:Connect(function()
            selected = option
            label.Text = labelText .. ": " .. option
            listFrame.Visible = false
            dropdownBtn.Text = "▼"
            -- Reset all others color
            for _, child in pairs(listFrame:GetChildren()) do
                if child:IsA("TextButton") then
                    if child.Text == option then
                        child.TextColor3 = Color3.fromRGB(75, 210, 75)
                    else
                        child.TextColor3 = Color3.fromRGB(220, 220, 220)
                    end
                end
            end
        end)
    end

    dropdownBtn.MouseButton1Click:Connect(function()
        listFrame.Visible = not listFrame.Visible
        dropdownBtn.Text = listFrame.Visible and "▲" or "▼"
    end)

    return {
        Frame = dropdownFrame,
        GetValue = function() return selected end,
    }
end

local dropdownExample = createDropdown(homePage, 230, "Select Option", {"Option 1", "Option 2", "Option 3"})

-- Tab switching logic
local currentTab = "Home"

local function setTab(name)
    if currentTab == name then return end
    currentTab = name

    -- Animate buttons highlight
    for tabName, btn in pairs(tabButtons) do
        if tabName == name then
            TweenService:Create(btn, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(75, 75, 75), TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
        else
            TweenService:Create(btn, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(38, 38, 38), TextColor3 = Color3.fromRGB(180, 180, 180)}):Play()
        end
    end

    -- Move pages frame left to show the correct page
    local pageIndex = table.find(tabs, name)
    local goalPos = UDim2.new(0, -(pageIndex - 1) * pages.AbsoluteSize.X, 0, 0)
    TweenService:Create(pages, TweenInfo.new(0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = goalPos}):Play()
end

for name, btn in pairs(tabButtons) do
    btn.MouseButton1Click:Connect(function()
        setTab(name)
    end)
end

-- Start on Home tab
setTab("Home")

-- Make GUI draggable by top bar
local dragging = false
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

topBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = main.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

topBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Close and minimize button actions
closeBtn.MouseButton1Click:Connect(function()
    gui.Enabled = false
end)

minimizeBtn.MouseButton1Click:Connect(function()
    if main.Size == UDim2.new(0, 520, 0, 350) then
        TweenService:Create(main, TweenInfo.new(0.3), {Size = UDim2.new(0, 200, 0, 38)}):Play()
        TweenService:Create(contentFrame, TweenInfo.new(0.3), {Position = UDim2.new(0, 20, 0, 48)}):Play()
        contentFrame.Visible = false
    else
        TweenService:Create(main, TweenInfo.new(0.3), {Size = UDim2.new(0, 520, 0, 350)}):Play()
        TweenService:Create(contentFrame, TweenInfo.new(0.3), {Position = UDim2.new(0, 20, 0, 48)}):Play()
        contentFrame.Visible = true
    end
end)

-- That's it! The GUI is very close to Native in style, layout, and feel.

