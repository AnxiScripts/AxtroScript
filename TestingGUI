-- Ultimate Advanced Roblox GUI
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")

-- Clean up existing GUI
if CoreGui:FindFirstChild("UltimateGUI") then
    CoreGui.UltimateGUI:Destroy()
end

local gui = Instance.new("ScreenGui")
gui.Name = "UltimateGUI"
gui.ResetOnSpawn = false
gui.Parent = CoreGui

-- Blur Background
local blur = Instance.new("BlurEffect")
blur.Size = 0
blur.Parent = game:GetService("Lighting")

-- Tween blur effect function
local function tweenBlur(targetSize, duration)
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quad)
    local tween = TweenService:Create(blur, tweenInfo, {Size = targetSize})
    tween:Play()
end

-- Main Frame
local main = Instance.new("Frame", gui)
main.Size = UDim2.new(0, 520, 0, 340)
main.Position = UDim2.new(0.5, -260, 0.5, -170)
main.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
main.BorderSizePixel = 0
main.ClipsDescendants = true

-- Rounded corners
local roundMain = Instance.new("UICorner", main)
roundMain.CornerRadius = UDim.new(0, 10)

-- Gradient
local gradMain = Instance.new("UIGradient", main)
gradMain.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 30)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 15))
}

-- Top bar
local top = Instance.new("Frame", main)
top.Size = UDim2.new(1, 0, 0, 38)
top.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
top.BorderSizePixel = 0

local roundTop = Instance.new("UICorner", top)
roundTop.CornerRadius = UDim.new(0, 10)

local title = Instance.new("TextLabel", top)
title.Size = UDim2.new(1, -80, 1, 0)
title.Position = UDim2.new(0, 15, 0, 0)
title.BackgroundTransparency = 1
title.Text = "ðŸš€ Ultimate Roblox Executor"
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextXAlignment = Enum.TextXAlignment.Left
title.TextYAlignment = Enum.TextYAlignment.Center

local close = Instance.new("TextButton", top)
close.Size = UDim2.new(0, 38, 1, 0)
close.Position = UDim2.new(1, -38, 0, 0)
close.BackgroundTransparency = 1
close.Text = "âœ•"
close.Font = Enum.Font.GothamBold
close.TextSize = 22
close.TextColor3 = Color3.fromRGB(255, 85, 85)
close.AutoButtonColor = false

local minimize = Instance.new("TextButton", top)
minimize.Size = UDim2.new(0, 38, 1, 0)
minimize.Position = UDim2.new(1, -76, 0, 0)
minimize.BackgroundTransparency = 1
minimize.Text = "â€”"
minimize.Font = Enum.Font.GothamBold
minimize.TextSize = 28
minimize.TextColor3 = Color3.fromRGB(200, 200, 200)
minimize.AutoButtonColor = false

-- Tab Buttons Frame
local tabsFrame = Instance.new("Frame", main)
tabsFrame.Size = UDim2.new(0, 140, 1, -38)
tabsFrame.Position = UDim2.new(0, 0, 0, 38)
tabsFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
tabsFrame.BorderSizePixel = 0

local roundTabs = Instance.new("UICorner", tabsFrame)
roundTabs.CornerRadius = UDim.new(0, 10)

local tabButtons = {}
local pages = {}

local function createTab(name)
    -- Tab Button
    local btn = Instance.new("TextButton", tabsFrame)
    btn.Size = UDim2.new(1, -20, 0, 40)
    btn.Position = UDim2.new(0, 10, 0, (#tabsFrame:GetChildren()-1) * 45)
    btn.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    btn.TextColor3 = Color3.fromRGB(200, 200, 200)
    btn.Text = name
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 16
    btn.AutoButtonColor = false

    local roundBtn = Instance.new("UICorner", btn)
    roundBtn.CornerRadius = UDim.new(0, 6)

    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}):Play()
    end)
    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(35, 35, 35)}):Play()
    end)

    -- Page Frame
    local page = Instance.new("Frame", main)
    page.Size = UDim2.new(1, -140, 1, -38)
    page.Position = UDim2.new(0, 140, 0, 38)
    page.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    page.BorderSizePixel = 0
    page.Visible = false
    local roundPage = Instance.new("UICorner", page)
    roundPage.CornerRadius = UDim.new(0, 8)
    
    pages[name] = page
    tabButtons[name] = btn

    btn.MouseButton1Click:Connect(function()
        for _, pg in pairs(pages) do
            if pg == page then
                pg.Visible = true
                -- Fade in animation
                pg.BackgroundTransparency = 1
                TweenService:Create(pg, TweenInfo.new(0.25), {BackgroundTransparency = 0}):Play()
            else
                pg.Visible = false
            end
        end
        -- Highlight selected button
        for n, b in pairs(tabButtons) do
            if n == name then
                TweenService:Create(b, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60,60,60), TextColor3=Color3.fromRGB(255,255,255)}):Play()
            else
                TweenService:Create(b, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(35,35,35), TextColor3=Color3.fromRGB(200,200,200)}):Play()
            end
        end
    end)
end

-- Create tabs
for _, tabName in ipairs({"Home", "Scripts", "Settings"}) do
    createTab(tabName)
end

-- Show Home tab by default
tabButtons["Home"].MouseButton1Click:Wait()

-- Helper function: Tooltip
local function addTooltip(guiObject, text)
    local tip = Instance.new("TextLabel", gui)
    tip.Size = UDim2.new(0, 180, 0, 25)
    tip.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    tip.TextColor3 = Color3.fromRGB(200, 200, 200)
    tip.Text = text
    tip.Font = Enum.Font.Gotham
    tip.TextSize = 14
    tip.Visible = false
    tip.ZIndex = 1000
    tip.AnchorPoint = Vector2.new(0, 1)
    tip.ClipsDescendants = true
    local roundTip = Instance.new("UICorner", tip)
    roundTip.CornerRadius = UDim.new(0, 6)

    guiObject.MouseEnter:Connect(function()
        tip.Visible = true
    end)
    guiObject.MouseLeave:Connect(function()
        tip.Visible = false
    end)
    guiObject:GetPropertyChangedSignal("AbsolutePosition"):Connect(function()
        local pos = guiObject.AbsolutePosition
        tip.Position = UDim2.new(0, pos.X + guiObject.AbsoluteSize.X + 8, 0, pos.Y + guiObject.AbsoluteSize.Y)
    end)
end

-- HOME PAGE CONTENT

local homePage = pages["Home"]

-- Toggle Template
local function createToggle(parent, label, callback, tooltip)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(0, 200, 0, 30)
    btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    btn.Position = UDim2.new(0, 20, 0, #parent:GetChildren() * 40)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 16
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Text = label .. ": OFF"
    btn.AutoButtonColor = false
    local toggled = false

    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(70,70,70)}):Play()
    end)
    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = toggled and Color3.fromRGB(100,150,100) or Color3.fromRGB(50,50,50)}):Play()
    end)

    btn.MouseButton1Click:Connect(function()
        toggled = not toggled
        btn.Text = label .. ": " .. (toggled and "ON" or "OFF")
        TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = toggled and Color3.fromRGB(100,150,100) or Color3.fromRGB(50,50,50)}):Play()
        if callback then pcall(callback, toggled) end
    end)

    if tooltip then
        addTooltip(btn, tooltip)
    end

    return btn
end

createToggle(homePage, "ESP", function(on)
    print("ESP toggled:", on)
    -- Insert your ESP logic here
end, "Toggle ESP (Extra Sensory Perception) to see players through walls.")

createToggle(homePage, "Fly", function(on)
    print("Fly toggled:", on)
    -- Insert your Fly logic here
end, "Toggle Fly to move freely in the air.")

-- SCRIPTS PAGE CONTENT

local scriptsPage = pages["Scripts"]

-- Dropdown Menu
local dropdownOpen = false

local dropdownFrame = Instance.new("Frame", scriptsPage)
dropdownFrame.Size = UDim2.new(0, 220, 0, 40)
dropdownFrame.Position = UDim2.new(0, 20, 0, 10)
dropdownFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
dropdownFrame.ClipsDescendants = true
dropdownFrame.AutoButtonColor = false
local roundDropdown = Instance.new("UICorner", dropdownFrame)
roundDropdown.CornerRadius = UDim.new(0, 6)

local selectedLabel = Instance.new("TextLabel", dropdownFrame)
selectedLabel.Size = UDim2.new(1, -30, 1, 0)
selectedLabel.Position = UDim2.new(0, 10, 0, 0)
selectedLabel.BackgroundTransparency = 1
selectedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
selectedLabel.Text = "Select Script"
selectedLabel.Font = Enum.Font.Gotham
selectedLabel.TextSize = 16
selectedLabel.TextXAlignment = Enum.TextXAlignment.Left
selectedLabel.TextYAlignment = Enum.TextYAlignment.Center

local arrow = Instance.new("TextLabel", dropdownFrame)
arrow.Size = UDim2.new(0, 20, 1, 0)
arrow.Position = UDim2.new(1, -25, 0, 0)
arrow.BackgroundTransparency = 1
arrow.TextColor3 = Color3.fromRGB(255, 255, 255)
arrow.Text = "â–¼"
arrow.Font = Enum.Font.GothamBold
arrow.TextSize = 20

local dropdownList = Instance.new("Frame", dropdownFrame)
dropdownList.Size = UDim2.new(1, 0, 0, 0)
dropdownList.Position = UDim2.new(0, 0, 1, 0)
dropdownList.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
dropdownList.ClipsDescendants = true
local roundList = Instance.new("UICorner", dropdownList)
roundList.CornerRadius = UDim.new(0, 6)

local scripts = {
    {Name = "Infinite Yield", Url = "https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"},
    {Name = "Dex Explorer", Url = "https://raw.githubusercontent.com/Extendware/DexExplorer/main/DexExplorer.lua"},
    {Name = "Aimbot (placeholder)", Url = ""},
}

local function closeDropdown()
    dropdownOpen = false
    local tween = TweenService:Create(dropdownList, TweenInfo.new(0.25), {Size = UDim2.new(1,0,0,0)})
    tween:Play()
    TweenService:Create(arrow, TweenInfo.new(0.25), {Rotation = 0}):Play()
end

local function openDropdown()
    dropdownOpen = true
    local tween = TweenService:Create(dropdownList, TweenInfo.new(0.25), {Size = UDim2.new(1,0,0,#scripts*40)})
    tween:Play()
    TweenService:Create(arrow, TweenInfo.new(0.25), {Rotation = 180}):Play()
end

dropdownFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        if dropdownOpen then
            closeDropdown()
        else
            openDropdown()
        end
    end
end)

for i, scr in ipairs(scripts) do
    local btn = Instance.new("TextButton", dropdownList)
    btn.Size = UDim2.new(1, 0, 0, 40)
    btn.Position = UDim2.new(0, 0, 0, (i-1)*40)
    btn.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Text = scr.Name
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 16
    btn.AutoButtonColor = false

    local roundBtn = Instance.new("UICorner", btn)
    roundBtn.CornerRadius = UDim.new(0, 6)

    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}):Play()
    end)
    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(55, 55, 55)}):Play()
    end)

    btn.MouseButton1Click:Connect(function()
        selectedLabel.Text = scr.Name
        closeDropdown()
        if scr.Url ~= "" then
            local success, err = pcall(function()
                loadstring(game:HttpGet(scr.Url))()
            end)
            if not success then
                warn("Failed to load script:", err)
            end
        else
            -- Placeholder action for scripts without URL
            print(scr.Name .. " selected (no script URL provided)")
        end
    end)
end

-- WalkSpeed slider
local sliderLabel = Instance.new("TextLabel", scriptsPage)
sliderLabel.Size = UDim2.new(0, 200, 0, 20)
sliderLabel.Position = UDim2.new(0, 20, 0, 200)
sliderLabel.BackgroundTransparency = 1
sliderLabel.Font = Enum.Font.Gotham
sliderLabel.TextSize = 16
sliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
sliderLabel.Text = "WalkSpeed: 16"

local sliderBar = Instance.new("Frame", scriptsPage)
sliderBar.Size = UDim2.new(0, 200, 0, 10)
sliderBar.Position = UDim2.new(0, 20, 0, 230)
sliderBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
sliderBar.BorderSizePixel = 0
local roundSlider = Instance.new("UICorner", sliderBar)
roundSlider.CornerRadius = UDim.new(0, 5)

local sliderHandle = Instance.new("Frame", sliderBar)
sliderHandle.Size = UDim2.new(0, 20, 1, 0)
sliderHandle.Position = UDim2.new(0, 0, 0, 0)
sliderHandle.BackgroundColor3 = Color3.fromRGB(100, 175, 255)
local roundHandle = Instance.new("UICorner", sliderHandle)
roundHandle.CornerRadius = UDim.new(0, 5)

local draggingSlider = false
local maxWalkSpeed = 100
local minWalkSpeed = 8

sliderHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        draggingSlider = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        draggingSlider = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if draggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mousePos = input.Position.X
        local sliderPos = sliderBar.AbsolutePosition.X
        local sliderSize = sliderBar.AbsoluteSize.X
        local relativePos = math.clamp(mousePos - sliderPos, 0, sliderSize)
        sliderHandle.Position = UDim2.new(0, relativePos - sliderHandle.AbsoluteSize.X/2, 0, 0)
        local value = math.floor((relativePos / sliderSize) * (maxWalkSpeed - minWalkSpeed) + minWalkSpeed)
        sliderLabel.Text = "WalkSpeed: " .. tostring(value)
        local player = game.Players.LocalPlayer
        if player and player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
            player.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = value
        end
    end
end)

addTooltip(sliderBar, "Drag to adjust your WalkSpeed.")

-- SETTINGS PAGE CONTENT

local settingsPage = pages["Settings"]

-- Save/Load Buttons
local GuiSettings = {
    ESP = false,
    Fly = false,
    WalkSpeed = 16,
    SelectedScript = "Select Script",
}

local function saveSettings()
    -- Use Roblox DataStore in real environment, here we just simulate saving locally
    local player = game.Players.LocalPlayer
    if player then
        local savedSettings = GuiSettings
        -- Store savedSettings to somewhere persistent if wanted
        print("Settings saved (locally):", savedSettings)
    end
end

local function loadSettings()
    -- Load from persistent store if available, else default
    -- Here, we just apply GuiSettings table values
    -- Apply toggles & slider to reflect loaded settings
    -- For demo, do nothing
    print("Settings loaded (demo)")
end

local saveBtn = Instance.new("TextButton", settingsPage)
saveBtn.Size = UDim2.new(0, 120, 0, 40)
saveBtn.Position = UDim2.new(0, 30, 0, 20)
saveBtn.BackgroundColor3 = Color3.fromRGB(40, 100, 40)
saveBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
saveBtn.Text = "Save Settings"
saveBtn.Font = Enum.Font.GothamBold
saveBtn.TextSize = 18
saveBtn.AutoButtonColor = false
local roundSave = Instance.new("UICorner", saveBtn)
roundSave.CornerRadius = UDim.new(0, 6)

saveBtn.MouseEnter:Connect(function()
    TweenService:Create(saveBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 140, 60)}):Play()
end)
saveBtn.MouseLeave:Connect(function()
    TweenService:Create(saveBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 100, 40)}):Play()
end)

saveBtn.MouseButton1Click:Connect(function()
    saveSettings()
end)

local loadBtn = Instance.new("TextButton", settingsPage)
loadBtn.Size = UDim2.new(0, 120, 0, 40)
loadBtn.Position = UDim2.new(0, 180, 0, 20)
loadBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 100)
loadBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
loadBtn.Text = "Load Settings"
loadBtn.Font = Enum.Font.GothamBold
loadBtn.TextSize = 18
loadBtn.AutoButtonColor = false
local roundLoad = Instance.new("UICorner", loadBtn)
roundLoad.CornerRadius = UDim.new(0, 6)

loadBtn.MouseEnter:Connect(function()
    TweenService:Create(loadBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 60, 140)}):Play()
end)
loadBtn.MouseLeave:Connect(function()
    TweenService:Create(loadBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 40, 100)}):Play()
end)

loadBtn.MouseButton1Click:Connect(function()
    loadSettings()
end)

-- Minimize / Close buttons functionality
local minimized = false
minimize.MouseButton1Click:Connect(function()
    if minimized then
        main.Size = UDim2.new(0, 520, 0, 340)
        for _, page in pairs(pages) do page.Visible = false end
        pages["Home"].Visible = true
        minimized = false
        tweenBlur(15, 0.25)
    else
        main.Size = UDim2.new(0, 200, 0, 38)
        for _, page in pairs(pages) do page.Visible = false end
        minimized = true
        tweenBlur(0, 0.25)
    end
end)

close.MouseButton1Click:Connect(function()
    tweenBlur(0, 0.3)
    gui:Destroy()
end)

-- Drag support
local dragging = false
local dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

top.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = main.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

top.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Open the GUI with blur tween in
tweenBlur(15, 0.3)

return gui
