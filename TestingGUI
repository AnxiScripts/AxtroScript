local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- == Configuration ==
local toggleKey = Enum.KeyCode.RightShift
local savedSettings = getgenv().GUI_Settings or {}

-- == Screen GUI ==
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "AdvancedExploitGUI"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- == Main Frame ==
local main = Instance.new("Frame", gui)
main.Position = UDim2.new(0.3, 0, 0.2, 0)
main.Size = UDim2.new(0, 600, 0, 350)
main.BackgroundColor3 = Color3.fromRGB(30, 0, 0)
main.BackgroundTransparency = 0.3
main.Active = true
main.Draggable = true
Instance.new("UICorner", main).CornerRadius = UDim.new(0, 10)

-- == Sidebar ==
local sidebar = Instance.new("Frame", main)
sidebar.Size = UDim2.new(0, 140, 1, 0)
sidebar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Instance.new("UICorner", sidebar).CornerRadius = UDim.new(0, 10)

local sideLayout = Instance.new("UIListLayout", sidebar)
sideLayout.Padding = UDim.new(0, 6)
sideLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
sideLayout.VerticalAlignment = Enum.VerticalAlignment.Top

-- == Tab Button Function ==
local function createTabBtn(name, icon)
	local btn = Instance.new("TextButton", sidebar)
	btn.Size = UDim2.new(1, -10, 0, 30)
	btn.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	btn.Text = icon .. "  " .. name
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 14
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.AutoButtonColor = false
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
	return btn
end

-- == Content Holder ==
local contentFrame = Instance.new("Frame", main)
contentFrame.Position = UDim2.new(0, 145, 0, 0)
contentFrame.Size = UDim2.new(1, -145, 1, 0)
contentFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Instance.new("UICorner", contentFrame).CornerRadius = UDim.new(0, 10)

local pages = {}

local function createPage(name)
	local page = Instance.new("Frame", contentFrame)
	page.Size = UDim2.new(1, 0, 1, 0)
	page.Visible = false
	page.BackgroundTransparency = 1
	pages[name] = page
	return page
end

-- == Toggle ==
local function createToggle(parent, text, key)
	local toggle = Instance.new("TextButton", parent)
	toggle.Size = UDim2.new(1, -20, 0, 30)
	toggle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	toggle.Text = text .. " [OFF]"
	toggle.Font = Enum.Font.Gotham
	toggle.TextSize = 14
	toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	Instance.new("UICorner", toggle).CornerRadius = UDim.new(0, 6)

	local state = savedSettings[key] or false
	local function updateVisual()
		toggle.Text = text .. (state and " [ON]" or " [OFF]")
		toggle.BackgroundColor3 = state and Color3.fromRGB(100, 30, 30) or Color3.fromRGB(40, 40, 40)
	end
	updateVisual()

	toggle.MouseButton1Click:Connect(function()
		state = not state
		savedSettings[key] = state
		updateVisual()
	end)
end

-- == Dropdown ==
local function createDropdown(parent, labelText, options, key)
	local label = Instance.new("TextLabel", parent)
	label.Size = UDim2.new(1, -20, 0, 20)
	label.Text = labelText
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.fromRGB(255, 255, 255)
	label.TextXAlignment = Enum.TextXAlignment.Left

	local dropdown = Instance.new("TextButton", parent)
	dropdown.Size = UDim2.new(1, -20, 0, 30)
	dropdown.Position = UDim2.new(0, 10, 0, 25)
	dropdown.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	dropdown.Font = Enum.Font.Gotham
	dropdown.TextSize = 14
	dropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
	Instance.new("UICorner", dropdown).CornerRadius = UDim.new(0, 6)

	local selected = savedSettings[key] or options[1]
	dropdown.Text = selected

	dropdown.MouseButton1Click:Connect(function()
		local nextIndex = table.find(options, selected) % #options + 1
		selected = options[nextIndex]
		dropdown.Text = selected
		savedSettings[key] = selected
	end)
end

-- == Tabs and Pages ==
local fishingTab = createTabBtn("Fishing", "üé£")
local settingsTab = createTabBtn("Settings", "‚öôÔ∏è")
local fishingPage = createPage("Fishing")
local settingsPage = createPage("Settings")

-- == Tab Logic ==
local function switchTab(name)
	for i, p in pairs(pages) do
		p.Visible = (i == name)
	end
end
fishingTab.MouseButton1Click:Connect(function() switchTab("Fishing") end)
settingsTab.MouseButton1Click:Connect(function() switchTab("Settings") end)

-- == Add Content ==
createToggle(fishingPage, "Freeze Character", "freeze")
createToggle(fishingPage, "Auto Equip Rod", "autoEquip")

createDropdown(fishingPage, "Select Rod", {"Placeholder", "None", "Aurora Rod"}, "selectedRod")
createToggle(settingsPage, "Enable UI Sounds", "sounds")

switchTab("Fishing")

-- == Keybind Toggle Visibility ==
UserInputService.InputBegan:Connect(function(input)
	if input.KeyCode == toggleKey then
		gui.Enabled = not gui.Enabled
	end
end)

-- == Save to Global (optional to persist across injections) ==
getgenv().GUI_Settings = savedSettings
