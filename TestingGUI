local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local toggleKey = Enum.KeyCode.RightShift
local savedSettings = getgenv().GUI_Settings or {}

-- Main GUI setup
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "AdvancedExploitGUI"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Main Frame
local main = Instance.new("Frame", gui)
main.Position = UDim2.new(0.3, 0, 0.2, 0)
main.Size = UDim2.new(0, 620, 0, 360)
main.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
main.BorderSizePixel = 0
main.Active = true
main.Draggable = true
Instance.new("UICorner", main).CornerRadius = UDim.new(0, 12)

-- Sidebar
local sidebar = Instance.new("Frame", main)
sidebar.Size = UDim2.new(0, 150, 1, 0)
sidebar.BackgroundColor3 = Color3.fromRGB(35, 0, 0)
sidebar.BorderSizePixel = 0
Instance.new("UICorner", sidebar).CornerRadius = UDim.new(0, 12)

local sideLayout = Instance.new("UIListLayout", sidebar)
sideLayout.Padding = UDim.new(0, 8)
sideLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
sideLayout.VerticalAlignment = Enum.VerticalAlignment.Top

-- Tab button helper
local function createTabBtn(name, icon)
	local btn = Instance.new("TextButton", sidebar)
	btn.Size = UDim2.new(1, -20, 0, 32)
	btn.BackgroundColor3 = Color3.fromRGB(60, 10, 10)
	btn.Text = icon .. "  " .. name
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 15
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.AutoButtonColor = false
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)
	return btn
end

-- Add all sidebar tabs
local tabNames = {
	{ "Configuration", "üõ†Ô∏è" },
	{ "Fishing", "üé£" },
	{ "Autos", "ü§ñ" },
	{ "Areas", "üó∫Ô∏è" },
	{ "Market", "üí∞" },
	{ "Miscellaneous", "üì¶" },
	{ "Settings", "‚öôÔ∏è" },
	{ "Debug", "üêû" }
}

local pages = {}
local tabButtons = {}

-- Content Frame
local contentFrame = Instance.new("Frame", main)
contentFrame.Position = UDim2.new(0, 155, 0, 0)
contentFrame.Size = UDim2.new(1, -155, 1, 0)
contentFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Instance.new("UICorner", contentFrame).CornerRadius = UDim.new(0, 12)

-- Page creation helper
local function createPage(name)
	local page = Instance.new("Frame", contentFrame)
	page.Size = UDim2.new(1, 0, 1, 0)
	page.Visible = false
	page.BackgroundTransparency = 1

	local layout = Instance.new("UIListLayout", page)
	layout.Padding = UDim.new(0, 10)
	layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	layout.VerticalAlignment = Enum.VerticalAlignment.Top
	pages[name] = page
	return page
end

-- Toggle helper
local function createToggle(parent, text, key)
	local toggle = Instance.new("TextButton", parent)
	toggle.Size = UDim2.new(0.9, 0, 0, 34)
	toggle.BackgroundColor3 = Color3.fromRGB(45, 0, 0)
	toggle.Font = Enum.Font.Gotham
	toggle.TextSize = 14
	toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	toggle.AutoButtonColor = false
	Instance.new("UICorner", toggle).CornerRadius = UDim.new(0, 6)

	local state = savedSettings[key] or false
	local function updateVisual()
		toggle.Text = text .. (state and " [ON]" or " [OFF]")
		toggle.BackgroundColor3 = state and Color3.fromRGB(120, 20, 20) or Color3.fromRGB(45, 0, 0)
	end
	updateVisual()

	toggle.MouseButton1Click:Connect(function()
		state = not state
		savedSettings[key] = state
		updateVisual()
	end)
end

-- Dropdown helper
local function createDropdown(parent, labelText, options, key)
	local wrapper = Instance.new("Frame", parent)
	wrapper.Size = UDim2.new(0.9, 0, 0, 55)
	wrapper.BackgroundTransparency = 1

	local label = Instance.new("TextLabel", wrapper)
	label.Size = UDim2.new(1, 0, 0, 20)
	label.Position = UDim2.new(0, 0, 0, 0)
	label.Text = labelText
	label.Font = Enum.Font.Gotham
	label.TextSize = 13
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.fromRGB(255, 255, 255)
	label.TextXAlignment = Enum.TextXAlignment.Left

	local dropdown = Instance.new("TextButton", wrapper)
	dropdown.Size = UDim2.new(1, 0, 0, 30)
	dropdown.Position = UDim2.new(0, 0, 0, 22)
	dropdown.BackgroundColor3 = Color3.fromRGB(45, 0, 0)
	dropdown.Font = Enum.Font.Gotham
	dropdown.TextSize = 14
	dropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
	Instance.new("UICorner", dropdown).CornerRadius = UDim.new(0, 6)

	local selected = savedSettings[key] or options[1]
	dropdown.Text = selected

	dropdown.MouseButton1Click:Connect(function()
		local nextIndex = table.find(options, selected) % #options + 1
		selected = options[nextIndex]
		dropdown.Text = selected
		savedSettings[key] = selected
	end)
end

-- Tab/Page creation
for _, tab in ipairs(tabNames) do
	local btn = createTabBtn(tab[1], tab[2])
	tabButtons[tab[1]] = btn
	local page = createPage(tab[1])

	btn.MouseButton1Click:Connect(function()
		for n, p in pairs(pages) do p.Visible = false end
		page.Visible = true
	end)
end

-- Fishing Page Content
local fishingPage = pages["Fishing"]

local title = Instance.new("TextLabel", fishingPage)
title.Size = UDim2.new(1, -20, 0, 30)
title.Text = "Main"
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.TextXAlignment = Enum.TextXAlignment.Left

createToggle(fishingPage, "Freeze Character", "freezeChar")
createToggle(fishingPage, "Auto Equip Rod", "autoEquipRod")
createDropdown(fishingPage, "Equip Rod Event Zone", {"Placeholder"}, "eventRod")
createDropdown(fishingPage, "Equip Red if Event Zone", {"None"}, "redZoneRod")
createDropdown(fishingPage, "Equip Rod", {"Aurora Rod"}, "equipRod")
createToggle(fishingPage, "Non-Blatant Fishing", "nonBlatant")
createToggle(fishingPage, "Legit Fishing", "legitFish")

-- Set default visible page
pages["Fishing"].Visible = true
